name: Django Unit Test

on:
  push:
    branches: [ "iteration*", "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12]
  
    env:
      DATABASE_PASSWORD: 'password'
      DATABASE_USER: 'pollsapp'
      DATABASE_NAME: 'polls'

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{env.DATABASE_USER}}
          POSTGRES_PASSWORD: ${{env.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{env.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{env.DATABASE_USER}}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage codecov
        pip install -r requirements.txt
    - name: Create .env file
      run: |
        touch .env
        echo "SECRET_KEY = ${{secrets.SECRET_KEY}}" >> .env
        echo "DEBUG = FALSE" >> .env
        echo "ALLOWED_HOSTS = 'localhost'" >> .env
        echo "TIME_ZONE = ${{vars.TIME_ZONE}}" >> .env
        cat .env

    - name: Run Tests
      run: coverage run manage.py test

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
      
